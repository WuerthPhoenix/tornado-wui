{
  "app": {
    "current_tenant": "Current tenant:"
  },
  "views": {
    "dashboard": {
      "dashboard": "Dashboard",
      "tiles": {
        "processing_tree": "Processing tree",
        "filters": "Filters",
        "rules": "Rules",
        "last_edit": "Last edit",
        "open_processing_tree": "Open processing tree"
      }
    },
    "preview_banner" : {
      "preview_title": "Design preview",
      "preview_text": "You are using a preview of Tornado's revamped UI, which currently does not include all functionalities. Please feel free to test it and, since we strive for improving it constantly, please send us your feedback.",
      "action-label": "Provide feedback"
    },
    "processing_tree": {
      "processing_tree": "Processing Tree",
      "toCollapsedView": "Collapsed view",
      "toFullView": "Expanded view",
      "rules": "Rules",
      "Filter": "Filter",
      "Ruleset": "Ruleset",
      "properties": "Properties",
      "where": "Where",
      "name": "Name",
      "description": "Description",
      "active": "Active",
      "parent_node": "Parent node",
      "actions": "Actions",
      "continue": "Continue",
      "replace": "Replace",
      "ruleset_settings": "Ruleset settings",
      "back": "Back",
      "with": "With",
      "live": "Live",
      "edit_in_progress": "Editing in progress",
      "add": "Add",
      "new_filter_node": "New filter node",
      "new_ruleset_node": "New ruleset node",
      "cancel": "Cancel",
      "select_parent_node_for_new_filter": "Select the parent node for new filter",
      "select_parent_node_for_new_ruleset": "Select the parent node for new ruleset",
      "select_parent_node_for_new_import": "Select a parent node to import into",
      "add_filter_node": "Add filter",
      "add_ruleset_node": "Add ruleset",
      "import_child": "Import child node",
      "import_node": "Import to replace",
      "import_node_modal_description": "Import will replace current node and its configuration including its child nodes.",
      "import_children_modal_description": "Nodes will be imported as child nodes and won't remove current child nodes, if there are any.",
      "import_modal_add_file_button": "Add file to continue",
      "import_modal_import_file_button": "Import",
      "import_success_title": "Import completed",
      "import_child_success_message": "All nodes have been imported successfully",
      "import_overwrite_title": "Node already exists",
      "import_overwrite_content": "One or more nodes with the same name already exists inside your import destination.",
      "import_overwrite_content_strong": "Do you want to overwrite them?",
      "import_notification_success_title": "Operation completed",
      "import_notification_success_message": "Import procedure was successful",
      "halt_import_title": "Conflict detected",
      "halt_import_content": "Another node sibling with the same name already exists: please rename the node and retry the operation.",
      "export_node": "Export",
      "delete": "Delete",
      "disabled": "Disabled",
      "delete_filter_confirmation_title": "Delete {name} filter",
      "delete_filter_confirmation_content": "Are you sure you want to delete this filter with all of its contents, including child nodes, rulesets and rules?",
      "delete_ruleset_confirmation_title": "Delete {name} ruleset",
      "delete_ruleset_confirmation_content": "Are you sure you want to delete this ruleset with all of its rules?",
      "add_rule": "Add rule",
      "delete_rule_confirmation_title": "Delete {name} rule",
      "delete_rule_confirmation_content": "Are you sure you want to delete this rule?",
      "matched": "Matched",
      "stopped": "Stopped",
      "partially-matched": "Partially matched",
      "not-matched": "Not matched"
    }
  },
  "errors": {
    "error": "Error",
    "node_not_found": "Node {path} not found",
    "node_is_not_a_ruleset": "Node {path} is not a ruleset",
    "node_details_not_loaded": "Node details {path} not loaded",
    "rule_not_found": "Rule {path} not found",
    "node_path_not_found_error": {
      "title": "Node not present in draft",
      "message": "The path {path} was expanded in view mode but is not present in the current draft"
    },
    "opened_node_path_not_found_error": "The path {path} was opened in view mode but is not present in the current draft",
    "draft_takeover_generic": "There was an error during the draft takeover",
    "draft_deploy_generic": "There was an error during the draft deployment",
    "import_generic": "There was an error during the import",
    "export_generic": "There was an error during the export",
    "invalid_name": "Name is required and can contain only alphanumerical characters or underscores",
    "name_too_long": "Name cannot be more than {limit} characters",
    "already_existing_node": "A filter with this name already exists",
    "already_existing_rule": "A rule with this name already exists in the same ruleset",
    "accessor_validation_error" : "Accessor error: ",
    "accessor_validation_error_type": {
      "UnknownKeyError": "the key [{key}] doesn't exist.",
      "NotANumberError": "the index [{key}] is not a number.",
      "InvalidCharacterError": "the key [{key}] contains an invalid character [{character}].",
      "EmptyAccessorError": "the key cannot be empty."
    },
    "regex_validation_error" : "Regex error in '{segment}': ",
    "regex_validation_error_type": {
      "CaptureLimitExceeded": "The capturing group limit was exceeded.",
      "ClassEscapeInvalid": "Invalid escape sequence was found in the character class set.",
      "ClassRangeInvalid": "Invalid character class range was found.",
      "ClassRangeLiteral": "Invalid range boundary was found in the character class.",
      "ClassUnclosed": "Opening `[` was found with no corresponding closing `]`",
      "DecimalEmpty": "Decimal number can only appear as a repetition quantifier.",
      "DecimalInvalid": "Invalid decimal number was given where one was expected.",
      "EscapeHexEmpty": "Bracketed hex literal was empty.",
      "EscapeHexInvalid": "Bracketed hex literal did not correspond to a Unicode scalar value.",
      "EscapeHexInvalidDigit": "Invalid hexadecimal digit was found.",
      "EscapeUnexpectedEof": "EOF was found before an escape sequence was completed.",
      "EscapeUnrecognized": "Unrecognized escape sequence.",
      "FlagDanglingNegation": "Dangling negation was used when setting flags, e.g., `i-`.",
      "FlagDuplicate": "Flag was used twice, e.g., `i-i`.",
      "FlagRepeatedNegation": "The negation operator was used twice, e.g., `-i-s`.",
      "FlagUnexpectedEof": "Expected a flag but got EOF, e.g., `(?`.",
      "FlagUnrecognized": "Unrecognized flag, e.g., `a`.",
      "GroupNameDuplicate": "Duplicate capture name was found.",
      "GroupNameEmpty": "Capture group name is empty, e.g., `(?P<>abc)`.",
      "GroupNameInvalid": "Invalid character was seen for a capture group name.",
      "GroupNameUnexpectedEof": "Closing `>` could not be found for a capture group name.",
      "GroupUnclosed": "Unclosed group, e.g., `(ab`.",
      "GroupUnopened": "Unopened group, e.g., `ab)`.",
      "NestLimitExceeded": "The nest limit was exceeded.",
      "RepetitionCountInvalid": "The range provided in a counted repetition operator is invalid.",
      "RepetitionCountDecimalEmpty": "Opening curly bracket was not followed by a valid decimal value.",
      "RepetitionCountUnclosed": "Opening curly bracket was found with no corresponding closing one.",
      "RepetitionMissing": "Repetition operator was applied to a missing sub-expression.",
      "UnicodeClassInvalid": "The Unicode class is not valid.",
      "UnsupportedBackreference": "Octal escape is used, octal support is currently disabled.",
      "UnsupportedLookAround": "Look Around syntax not supported.",
      "UnicodeNotAllowed": "Unicode support is disabled. Unicode feature can not be used.",
      "InvalidUtf8": "`UTF-8` not enabled.",
      "InvalidLineTerminator": "Non-ASCII byte for a line terminator found, Unicode mode is enabled and UTF-8 mode is disabled.",
      "UnicodePropertyNotFound": "Unrecognized Unicode property name could not be found.",
      "UnicodePropertyValueNotFound": "Unrecognized Unicode property value could not be found.",
      "UnicodePerlClassNotFound": "Unicode-aware Perl character class (`\\w`, `\\s` or `\\d`) could not be found.",
      "UnicodeCaseUnavailable": "Unicode simple case mapping tables are not available, and the regular expression required Unicode aware case insensitivity."
    }
  },
  "editor": {
    "no_condition_found": "There is no condition",
    "no_extractor_found": "There is no extractor",
    "no_actions_found": "There is no action",
    "add_extractor": "Add extractor",
    "add_action" : "Add action",
    "add_action_below": "Add action below",
    "choose_action": "Choose action type",
    "from": "from",
    "match": "Match",
    "single_key_match": "Single key match",
    "named_match": "Named match",
    "all_matches": "All matches",
    "group_match_idx": "Group match idx",
    "no_modifiers_applied": "No modifiers applied",
    "target": "Target",
    "add_group": "Add group",
    "add_condition": "Add condition",
    "delete_row": "Delete row",
    "add_condition_below": "Add condition below",
    "add_group_below": "Add group below",
    "choose_group_type": "Choose group type",
    "choose_condition_type": "Choose condition type",
    "cancel": "Cancel",
    "group_match_idx_empty": "return all groups",
    "modifiers": {
      "modifiers": "Modifiers",
      "lowercase": "Lowercase",
      "DateAndTime": {
        "DateAndTime": "Date And Time",
        "timezone": "Timezone",
        "select": "Select timezone"
      },
      "to_number": "ToNumber",
      "trim": "Trim",
      "map": {
        "map": "Map",
        "default_value": "Default value",
        "value": "Value",
        "replacement": "Replacement",
        "key_error": {
          "duplicated": "Value must be unique",
          "empty": "Value cannot be empty"
        }
      },
      "replace_all": {
        "replace_all": "ReplaceAll",
        "find": "Find",
        "replace": "Replace",
        "is_regex": "Regex"
      },
      "descriptions": {
        "lowercase": "Converts the resulting String to lower case.",
        "DateAndTime": "Convert a UNIX epoch timestamp into a human-readable format (RFC3339).",
        "to_number": "Transforms the resulting String into a number.",
        "trim": "Trims the resulting String.",
        "map": "Maps a string to another string value.",
        "replace_all": "Replace all matching substrings with the given text."
      }
    },
    "delete_action": "Delete action"
  },
  "test_window": {
    "trigger_tooltip": "Toggle test event panel",
    "test_panel": "Test Panel",
    "timepicker": {
      "error": "Invalid time"
    },
    "test_event": "Test event",
    "test_result": "Test results",
    "event_type": "Event type",
    "creation_time": "Creation time",
    "enable_execution_of_actions": "Enable execution of actions",
    "payload": "Payload",
    "edit_payload": "Edit payload",
    "clear_form": "Clear form",
    "clear_result": "Clear result",
    "run_test": "Run test",
    "extracted_variables": "Extracted variables",
    "select_ruleset_to_see_extracted_variables": "Select ruleset to see extracted actions and variables",
    "invalid_created_ms": "It must be a valid timestamp",
    "lines": "{n} line | {n} lines",
    "save": "Save",
    "cancel": "Cancel",
    "no_extracted_variables_found": "No extracted variables found",
    "no_triggered_actions_found": "No triggered actions found",
    "show_action_payload": "Show action payload",
    "testing": "Testing...",
    "tenant_not_found_error": {
      "title": "Event not reached",
      "text": "Your event did not reach your processing tree because it was filtered out by a parent node"
    },
    "missing_created_ms": "A creation time is required",
    "extracted_variables_in_rule": "Extracted variables in rule",
    "tenant_id": "Tenant ID",
    "none": "None",
    "pending_unsaved_changes": "Pending changes not saved",
    "show_variable_in_ruleset": "Show variable in Ruleset",
    "show_actions_in_ruleset": "Show action in Ruleset",
    "text_copied": "Copied to your clipboard",
    "copy_payload": "Copy payload to clipboard",
    "result_cleared_data_has_changed": "Test results have been cleared because the data has changed"
  },
  "edit_mode": {
    "edit_mode": "Edit mode",
    "on": "On",
    "off": "Off",
    "confirm_deploy_modal": {
      "title": "Deploy draft in production?",
      "content": "Do you want to deploy your draft to Tornado? Please ensure that all configurations work properly, as this action is not reversible!",
      "deploy_draft": "Deploy draft"
    },
    "draft_deploy_success_title": "Draft deployed",
    "draft_deploy_success_message": "Draft deployed successfully",
    "delete_draft_confirmation_modal": {
      "title": "Delete draft",
      "content": "Are you sure you want to delete this draft?"
    },
    "delete_draft_title": "Draft deleted",
    "delete_draft_message": "Draft deleted successfully",
    "takeover_draft_confirmation_modal": {
      "title": "Takeover draft",
      "content": "Are you sure you want to takeover this draft?"
    },
    "takeover_draft_notification_success_title": "Draft ownership achieved",
    "takeover_draft_notification_success_message": "Draft owned successfully",
    "draft_status": {
      "saved": "Saved",
      "saving": "Saving...",
      "error": "Error",
      "unsaved_changes": "Unsaved changes",
      "saving_in_progress": "Saving in progress",
      "all_changes_saved": "All changes saved",
      "there_are_unsaved_changes": "There are unsaved changes",
      "save_changes": "Save changes",
      "deploy_changes": "Deploy changes",
      "delete_draft": "Delete current draft"
    },
    "an_error_occurred_while_saving_the_draft": "An error occurred while saving the draft.",
    "action": "Action",
    "unsaved_changes_modal": {
      "title": "Unsaved changes",
      "content": "The draft has unsaved local changes. If you proceed, all unsaved changes will be discarded."
    },
    "save_to_import_modal": {
      "title": "Draft save necessary",
      "content": "You need to save your draft changes before proceeding with the requested procedure."
    },
    "export_success_title": "Export completed",
    "export_success_message": "Export file is being downloaded"
  }
}
